// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/karmada-io/karmada-operator/pkg/apis/operator/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KarmadaOnboradLister helps list KarmadaOnborads.
// All objects returned here must be treated as read-only.
type KarmadaOnboradLister interface {
	// List lists all KarmadaOnborads in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KarmadaOnborad, err error)
	// KarmadaOnborads returns an object that can list and get KarmadaOnborads.
	KarmadaOnborads(namespace string) KarmadaOnboradNamespaceLister
	KarmadaOnboradListerExpansion
}

// karmadaOnboradLister implements the KarmadaOnboradLister interface.
type karmadaOnboradLister struct {
	indexer cache.Indexer
}

// NewKarmadaOnboradLister returns a new KarmadaOnboradLister.
func NewKarmadaOnboradLister(indexer cache.Indexer) KarmadaOnboradLister {
	return &karmadaOnboradLister{indexer: indexer}
}

// List lists all KarmadaOnborads in the indexer.
func (s *karmadaOnboradLister) List(selector labels.Selector) (ret []*v1alpha1.KarmadaOnborad, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KarmadaOnborad))
	})
	return ret, err
}

// KarmadaOnborads returns an object that can list and get KarmadaOnborads.
func (s *karmadaOnboradLister) KarmadaOnborads(namespace string) KarmadaOnboradNamespaceLister {
	return karmadaOnboradNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KarmadaOnboradNamespaceLister helps list and get KarmadaOnborads.
// All objects returned here must be treated as read-only.
type KarmadaOnboradNamespaceLister interface {
	// List lists all KarmadaOnborads in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.KarmadaOnborad, err error)
	// Get retrieves the KarmadaOnborad from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.KarmadaOnborad, error)
	KarmadaOnboradNamespaceListerExpansion
}

// karmadaOnboradNamespaceLister implements the KarmadaOnboradNamespaceLister
// interface.
type karmadaOnboradNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KarmadaOnborads in the indexer for a given namespace.
func (s karmadaOnboradNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KarmadaOnborad, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KarmadaOnborad))
	})
	return ret, err
}

// Get retrieves the KarmadaOnborad from the indexer for a given namespace and name.
func (s karmadaOnboradNamespaceLister) Get(name string) (*v1alpha1.KarmadaOnborad, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("karmadaonborad"), name)
	}
	return obj.(*v1alpha1.KarmadaOnborad), nil
}
